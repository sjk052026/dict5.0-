第二阶段的规划：HTTPSERVER3.0(自己看视频)   2天 + 1天

## 电子词典 dict ---> words  id   word  mean

### 功能说明

> 用户可以登录和注册(电商项目 -> 登录和注册)
>     * 登录凭借用户名和密码登录
>
> - 注册要求用户必须填写用户名，密码，其他内容自定
> - 用户名要求不能重复
> - 要求用户信息能够长期保存    数据的持久化--》存入到数据库,mysql

> 可以通过基本的图形界面print以提示客户端输入。
>
> - 程序分为服务端和客户端两部分
> - 客户端通过print打印简单界面输入命令发起请求
> - 服务端主要负责逻辑数据处理
> - 启动服务端后应该能满足多个客户端同时操作

> 客户端启动后即进入一级界面，包含如下功能：登录    注册    退出

```
* 退出后即退出该软件
* 登录成功即进入二级界面，失败回到一级界面
* 注册成功可以回到一级界面继续登录，也可以直接用注册用户进入二级界面
```

> 用户登录后进入二级界面，功能如下：查单词    历史记录(10条)    注销

```
* 选择注销则回到一级界面
* 查单词：循环输入单词，得到单词解释，输入特殊符号退出单词查询状态
* 历史记录：查询当前用户的查词记录，要求记录包含name   word   time。可以查看所有记录或者前10条均可。
```
HTTPSERVER3.0(自己看视频)   2天 + 1天
1. 确定技术方案
    * socket套接字(tcp)
    * 多进程
    * 细节：对查询时间进行倒序排序，limit 10
2. 创建表
    - 单词表 (数据库dict中words表)
    - 用户表 user (id, username, password)
        CREATE TABLE user (
            id INT PRIMARY KEY AUTO_INCREMENT,
            username VARCHAR(32) NOT NULL,
            password VARCHAR(32) NOT NULL
        );
    - 历史记录 history (id, username, word, time)
        CREATE TABLE history (
            id INT PRIMARY KEY AUTO_INCREMENT,
            username VARCHAR(32) NOT NULL,
            word VARCHAR(32) NOT NULL,
            time DATETIME DEFAULT NOW()  -- now()表示当前系统时间
        );
3. 项目结构设计
    客户端：
    服务端(mvc)：逻辑处理业务(controller)，数据库操作(model), 界面(view)
4. 功能
    网络搭建(socket通信)
    一级菜单(用户未登录)：
        注册 向数据库user表中插入数据
        登录 查询数据库user表
        退出
    二级菜单(用户已登录)
        查单词 查询数据库中的words表，向数据库history表中插入数据
        查询历史记录 查询数据库中的history表
        注销













番外篇：
面试：电商项目 -> 我负责用户模块中的一些内容，包括登录，注册。。。。
                还有商品模块中的部分内容，比如。。。。。
                最后也参加了支付模块中的功能设计，例如。。。。
    项目：
        我：登录，支付，后台管理，添加购物车，商品的展示
        雷老板：注册，购物车商品离线显示，商品快捷购买

        用户模块.py：我写了登录功能(1~57)，雷老板写了注册功能(1:47)
        .....
            合并分支时出现冲突问题
        真实的项目并不是按照功能去划分任务，而是按照模块区划分任务


